<Configuration>
  
  <Configuration InputParsingInfo="">

  </Configuration>  
  
  <Configuration LoggingAndDebuggingInfo="">
    <ConfigurationParameter DebugMode="true"/>
    <ConfigurationParameter ErrorLogMode="true"/>
    <ConfigurationParameter ConsoleLogMode="true"/>
    <ConfigurationParameter LogFile="e:\documents and settings\ASALLAB\Desktop\Flash\PhD_Flash\Implementation\Diactrization\Results\Configuration_0.102\log.txt"/>
  </Configuration>

  <!--Configuration RootTrainDirectory: The root of the files to be parsed, the dataset/-->
  <Configuration RootTrainDirectory="e:\documents and settings\ASALLAB\Desktop\Flash\PhD_Flash\Implementation\Diactrization\Dataset\Short_Train">
    <!--ConfigurationParameter TrainPOSInputFormat=
        "ReadyFeatures": POS/Mrf info is ready in RDI format
        "RawTxt": Only raw text is available. Features to be extracted. For example, POS is obtained by running Stanford Tagger
     /-->
    <ConfigurationParameter TrainInputFormat="ReadyFeatures"/>

    <!--ConfigurationParameter TrainInputParsingMode=
        "AnyFile": Parse the root until a file (i.e. not directory) is found and parse it
        "FolderStructure": The files to be parsed are located in known folder, with known extension
     /-->
    <ConfigurationParameter TrainInputParsingMode="FolderStructure"/>
  </Configuration>
  <!--Configuration RootTestDirectory: The root of the files to be parsed, the dataset/-->
  <Configuration RootTestDirectory="e:\documents and settings\ASALLAB\Desktop\Flash\PhD_Flash\Implementation\Diactrization\Dataset\Short_Test">
    <!--ConfigurationParameter TestPOSInputFormat=
        "ReadyFeatures": POS/Mrf info is ready in RDI format
        "RawTxt": Only raw text is available. Features to be extracted. For example, POS is obtained by running Stanford Tagger
     /-->
    <ConfigurationParameter TestInputFormat="ReadyFeatures"/>

    <!--ConfigurationParameter TestInputParsingMode=
        "AnyFile": Parse the root until a file (i.e. not directory) is found and parse it
        "FolderStructure": The files to be parsed are located in known folder, with known extension
     /-->
    <ConfigurationParameter TestInputParsingMode="FolderStructure"/>
  </Configuration>
  
  <Configuration StanfordTaggerParams="">
    <!--ConfigurationParameter StanfordTaggerModelName: The name of the model to use with Stanford tagger, 
    arabic-fast.tagger or arabic-accurate.tagger (accurate doesnt always work/-->
    <ConfigurationParameter StanfordTaggerModelName="arabic-fast.tagger"/>

    <!--ConfigurationParameter StanfordTaggerOutFileName: The .POS generated by the tagger, temp file/-->
    <ConfigurationParameter StanfordTaggerOutFileName="stanford_pos_output.POS"/>

    <!--ConfigurationParameter StanfordRemoveDiacritics: Remove the diacritics sign before parsing?/-->
    <Configuration StanfordRemoveDiacritics="false">
      <!--ConfigurationParameter StanfordFileWithoutDiacs: Temp file with removed diacs of the current parsed file/-->
      <ConfigurationParameter StanfordFileWithoutDiacs="stanford_input_without_diacs.txt"/>
    </Configuration>

    <!--ConfigurationParameter MapStanfordToRDI: Put IDs for Stanford o/p directly or map to RDI equivalents. Useful when 
    training in RDI and test in Stanford/-->
    <ConfigurationParameter MapStanfordToRDI="true"/>
  </Configuration>
  
  <Configuration ParseFolderInfo="">
    <!--The follwing params are self explained/-->
    <ConfigurationParameter MrfFolderName="التحليل الصرفي"/>
    <ConfigurationParameter PosFolderName="الأنواع الكلامية"/>
    <ConfigurationParameter TxtFolderName="ملفات النصوص"/>
    <ConfigurationParameter DirectorySeparator="\"/>
    <ConfigurationParameter FileExensionSeparator="."/>
    <ConfigurationParameter MrfFileExtension="mrf"/>
    <ConfigurationParameter POSFileExtension="pos"/>
    <ConfigurationParameter TxtFileExtension="txt"/>
  </Configuration>

  <Configuration ErrInfo="">
    <!--ConfigurationParameter SuppressErrType: Suppress certain errors checking and logging. For
    error codes see ErrorCode in Enums.cs/-->
    <ConfigurationParameter SuppressErrType="6"/>
    <ConfigurationParameter SuppressErrType="8"/>
  </Configuration>

  <Configuration FeaturesFormatInfo="">
    <!--ConfigurationParameter FeaturesFormat: Encoding format of generated features/-->
    <ConfigurationParameter FeaturesFormat="Raw"/>
    
    <!--ConfigurationParameter OutputFeatures: Generated features: 
        MrfOnly, POSOnly, MrfAndPOS, WordOnly, POSAndWord, MrfAndWord and All
      /-->
    <ConfigurationParameter OutputFeatures="WordOnly"/>

    <!--ConfigurationParameter WordOnlyVocabularyScope: Only in case of Word features used:
    AsIs: The given word in training is assigned an ID as it is. If the same word has different forms they are considered different ID's
    + the non-diacritized word also
    NoDiac: The word without diac. sign is only included as feature. Since the word sense of the removed diac.
    RemoveSyntacticDiac: The word with last diac. sign + the non-diacritized words are included/-->
    <ConfigurationParameter WordOnlyVocabularyScope="RemoveSyntacticDiac"/>

    <!--ConfigurationParameter WordOnlyEncoding: 
    WordLevel: The bitfield is assigned based on all words in the vocabulary.
    CharacterLevel: The word is broken down into characters, which are encoded as bitfields. The word representation is just
    the concatenation of those characters bitfields. With this type, it's more convenient to choose WordOnlyVocabularyScope="RemoveSyntacticDiac"
    because for char level, if training is on diacritized words and test on non-diac words, they'll not be considered out-of-voc.
    since they'll be encoded on char level. Also, it's not good to choose AsIs if syntactic diacs exist in training, bcz this makes the true
    class part of the features
    /-->   
    <ConfigurationParameter WordOnlyEncoding="CharacterLevel"/>
       
    <!--ConfigurationParameter MrfSuppressFeature: Remove certain features from final vector/-->
    <ConfigurationParameter MrfSuppressFeature="mrfType"/>
    <ConfigurationParameter MrfSuppressFeature="p"/>
    <ConfigurationParameter MrfSuppressFeature="r"/>
    <ConfigurationParameter MrfSuppressFeature="f"/>
    <ConfigurationParameter MrfSuppressFeature="s"/>
    <!--ConfigurationParameter LastCharFeaturesDepth: How many last characters of the word to be included in the final vector/-->
    <ConfigurationParameter LastCharFeaturesDepth="0"/>
    
    <!--ConfigurationParameter AddFeatureToCentralContextWord: Although some features could be removed from context words by 
    MrfSuppressFeature, we might need to add them specially to the central word/-->
    <!--ConfigurationParameter AddFeatureToCentralContextWord="p"/-->
    <!--ConfigurationParameter AddFeatureToCentralContextWord="s"/-->
  </Configuration>

  <Configuration TargetInfo="">
    <!--ConfigurationParameter TargetType: POS or DIAC/-->
    <ConfigurationParameter TargetType="DIAC"/>
    
    <!--ConfigurationParameter LogExamplesEvenNoTargetDetected: Flag to indicate if we wish to log the example feature even if no target/-->
    <ConfigurationParameter LogExamplesEvenNoTargetDetected="false"/>    
  </Configuration>  
  <Configuration ContextInfo="">
    <!--ConfigurationParameter ContextType=// Type 1 (considering before and after fixed num. of words) or Type 2 (considering context length with no constraint on before and after)/-->
    <ConfigurationParameter ContextType="Type 1"/>
    <!--ConfigurationParameter ContextLength: number of words in the context: Type 2/-->
    <ConfigurationParameter ContextLength="3"/>

    <!--ConfigurationParameter ContextBeforeLength and ContextAfterLength: Type 1 before and after words in context/-->
    <ConfigurationParameter ContextBeforeLength="3"/>
    <ConfigurationParameter ContextAfterLength="1"/>
  </Configuration>



  <Configuration OutputInfo="">
    <!--ConfigurationParameter ConfigurationEnvironmentDirectory: where to generate the output/-->
    <ConfigurationParameter ConfigurationEnvironmentDirectory="e:\documents and settings\ASALLAB\Desktop\Flash\PhD_Flash\Implementation\Diactrization\Results\Configuration_0.102"/>
    <!--ConfigurationParameter OutputFile: The suffix of the txt file of output features/-->
    <ConfigurationParameter OutputFile="e:\documents and settings\ASALLAB\Desktop\Flash\PhD_Flash\Implementation\Diactrization\Results\Configuration_0.102\features"/>
    <!--ConfigurationParameter OutputFileFormat: The format of output: 
    "MatlabWorkspace": direct matlab env = input_data.mat
    "MATLAB": "MatlabFilePath" contains "MatlabFunctionName" to define Features and Targets vectors/-->
    <ConfigurationParameter OutputFileFormat="MatlabWorkspace"/>
    <!--ConfigurationParameter MatlabFilePath and MatlabFunctionName: see OutputFileFormat above/-->
    <ConfigurationParameter MatlabFilePath="e:\documents and settings\ASALLAB\Desktop\Flash\PhD_Flash\Implementation\Generic Classifier\Generic_Classifier_0.13"/>
    <ConfigurationParameter MatlabFunctionName="DCONV_convertMatlabInput"/>
  </Configuration>
  
</Configuration>